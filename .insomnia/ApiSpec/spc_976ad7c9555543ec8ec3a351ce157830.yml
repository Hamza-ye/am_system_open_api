_id: spc_976ad7c9555543ec8ec3a351ce157830
type: ApiSpec
parentId: wrk_a0df7cd4a80c4e258b9e6f0538ec0949
modified: 1657841574134
created: 1657559570782
fileName: Am System Pg API 0.0.1
contents: >-
  {
  	"openapi": "3.0.1",
  	"info": {
  		"title": "Am System Pg API",
  		"description": "Am System Pg API documentation",
  		"termsOfService": "",
  		"contact": {
  			"name": "",
  			"url": "",
  			"email": ""
  		},
  		"license": {
  			"name": "unlicensed",
  			"url": ""
  		},
  		"version": "0.0.1"
  	},
  	"servers": [
  		{
  			"url": "http://localhost:9000",
  			"description": "Generated server url"
  		}
  	],
  	"paths": {
  		"/api/relative-periods/{id}": {
  			"get": {
  				"tags": [
  					"relative-periods-resource"
  				],
  				"operationId": "getRelativePeriods",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/RelativePeriods"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"relative-periods-resource"
  				],
  				"operationId": "updateRelativePeriods",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/RelativePeriods"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/RelativePeriods"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"relative-periods-resource"
  				],
  				"operationId": "deleteRelativePeriods",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"relative-periods-resource"
  				],
  				"operationId": "partialUpdateRelativePeriods",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/RelativePeriods"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/RelativePeriods"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/RelativePeriods"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/periods/{id}": {
  			"get": {
  				"tags": [
  					"period-resource"
  				],
  				"operationId": "getPeriod",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/Period"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"period-resource"
  				],
  				"operationId": "updatePeriod",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/Period"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/Period"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"period-resource"
  				],
  				"operationId": "deletePeriod",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"period-resource"
  				],
  				"operationId": "partialUpdatePeriod",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/Period"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/Period"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/Period"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/period-types/{id}": {
  			"get": {
  				"tags": [
  					"period-type-resource"
  				],
  				"operationId": "getPeriodType",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/PeriodType"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"period-type-resource"
  				],
  				"operationId": "updatePeriodType",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/PeriodType"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/PeriodType"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"period-type-resource"
  				],
  				"operationId": "deletePeriodType",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"period-type-resource"
  				],
  				"operationId": "partialUpdatePeriodType",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/PeriodType"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/PeriodType"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/PeriodType"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/people/{id}": {
  			"get": {
  				"tags": [
  					"person-resource"
  				],
  				"operationId": "getPerson",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/Person"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"person-resource"
  				],
  				"operationId": "updatePerson",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/Person"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/Person"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"person-resource"
  				],
  				"operationId": "deletePerson",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"person-resource"
  				],
  				"operationId": "partialUpdatePerson",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/Person"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/Person"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/Person"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/people-groups/{id}": {
  			"get": {
  				"tags": [
  					"people-group-resource"
  				],
  				"operationId": "getPeopleGroup",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/PeopleGroup"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"people-group-resource"
  				],
  				"operationId": "updatePeopleGroup",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/PeopleGroup"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/PeopleGroup"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"people-group-resource"
  				],
  				"operationId": "deletePeopleGroup",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"people-group-resource"
  				],
  				"operationId": "partialUpdatePeopleGroup",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/PeopleGroup"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/PeopleGroup"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/PeopleGroup"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/organisation-units/{id}": {
  			"get": {
  				"tags": [
  					"organisation-unit-resource"
  				],
  				"operationId": "getOrganisationUnit",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/OrganisationUnit"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"organisation-unit-resource"
  				],
  				"operationId": "updateOrganisationUnit",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/OrganisationUnit"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/OrganisationUnit"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"organisation-unit-resource"
  				],
  				"operationId": "deleteOrganisationUnit",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"organisation-unit-resource"
  				],
  				"operationId": "partialUpdateOrganisationUnit",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/OrganisationUnit"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/OrganisationUnit"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/OrganisationUnit"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/organisation-unit-levels/{id}": {
  			"get": {
  				"tags": [
  					"organisation-unit-level-resource"
  				],
  				"operationId": "getOrganisationUnitLevel",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/OrganisationUnitLevel"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"organisation-unit-level-resource"
  				],
  				"operationId": "updateOrganisationUnitLevel",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/OrganisationUnitLevel"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/OrganisationUnitLevel"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"organisation-unit-level-resource"
  				],
  				"operationId": "deleteOrganisationUnitLevel",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"organisation-unit-level-resource"
  				],
  				"operationId": "partialUpdateOrganisationUnitLevel",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/OrganisationUnitLevel"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/OrganisationUnitLevel"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/OrganisationUnitLevel"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/organisation-unit-groups/{id}": {
  			"get": {
  				"tags": [
  					"organisation-unit-group-resource"
  				],
  				"operationId": "getOrganisationUnitGroup",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/OrganisationUnitGroup"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"organisation-unit-group-resource"
  				],
  				"operationId": "updateOrganisationUnitGroup",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/OrganisationUnitGroup"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/OrganisationUnitGroup"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"organisation-unit-group-resource"
  				],
  				"operationId": "deleteOrganisationUnitGroup",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"organisation-unit-group-resource"
  				],
  				"operationId": "partialUpdateOrganisationUnitGroup",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/OrganisationUnitGroup"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/OrganisationUnitGroup"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/OrganisationUnitGroup"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/organisation-unit-group-sets/{id}": {
  			"get": {
  				"tags": [
  					"organisation-unit-group-set-resource"
  				],
  				"operationId": "getOrganisationUnitGroupSet",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/OrganisationUnitGroupSet"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"organisation-unit-group-set-resource"
  				],
  				"operationId": "updateOrganisationUnitGroupSet",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/OrganisationUnitGroupSet"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/OrganisationUnitGroupSet"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"organisation-unit-group-set-resource"
  				],
  				"operationId": "deleteOrganisationUnitGroupSet",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"organisation-unit-group-set-resource"
  				],
  				"operationId": "partialUpdateOrganisationUnitGroupSet",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/OrganisationUnitGroupSet"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/OrganisationUnitGroupSet"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/OrganisationUnitGroupSet"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/malaria-units/{id}": {
  			"get": {
  				"tags": [
  					"malaria-unit-resource"
  				],
  				"operationId": "getMalariaUnit",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/MalariaUnit"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"malaria-unit-resource"
  				],
  				"operationId": "updateMalariaUnit",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/MalariaUnit"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/MalariaUnit"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"malaria-unit-resource"
  				],
  				"operationId": "deleteMalariaUnit",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"malaria-unit-resource"
  				],
  				"operationId": "partialUpdateMalariaUnit",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/MalariaUnit"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/MalariaUnit"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/MalariaUnit"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/malaria-unit-staff-members/{id}": {
  			"get": {
  				"tags": [
  					"malaria-unit-staff-member-resource"
  				],
  				"operationId": "getMalariaUnitStaffMember",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/MalariaUnitStaffMember"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"malaria-unit-staff-member-resource"
  				],
  				"operationId": "updateMalariaUnitStaffMember",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/MalariaUnitStaffMember"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/MalariaUnitStaffMember"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"malaria-unit-staff-member-resource"
  				],
  				"operationId": "deleteMalariaUnitStaffMember",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"malaria-unit-staff-member-resource"
  				],
  				"operationId": "partialUpdateMalariaUnitStaffMember",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/MalariaUnitStaffMember"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/MalariaUnitStaffMember"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/MalariaUnitStaffMember"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/malaria-cases-reports/{id}": {
  			"get": {
  				"tags": [
  					"malaria-cases-report-resource"
  				],
  				"operationId": "getMalariaCasesReport",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/MalariaCasesReport"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"malaria-cases-report-resource"
  				],
  				"operationId": "updateMalariaCasesReport",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/MalariaCasesReport"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/MalariaCasesReport"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"malaria-cases-report-resource"
  				],
  				"operationId": "deleteMalariaCasesReport",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"malaria-cases-report-resource"
  				],
  				"operationId": "partialUpdateMalariaCasesReport",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/MalariaCasesReport"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/MalariaCasesReport"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/MalariaCasesReport"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/gps-locations/{id}": {
  			"get": {
  				"tags": [
  					"gps-location-resource"
  				],
  				"operationId": "getGpsLocation",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/GpsLocation"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"gps-location-resource"
  				],
  				"operationId": "updateGpsLocation",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/GpsLocation"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/GpsLocation"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"gps-location-resource"
  				],
  				"operationId": "deleteGpsLocation",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"gps-location-resource"
  				],
  				"operationId": "partialUpdateGpsLocation",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/GpsLocation"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/GpsLocation"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/GpsLocation"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/dengue-cases-reports/{id}": {
  			"get": {
  				"tags": [
  					"dengue-cases-report-resource"
  				],
  				"operationId": "getDengueCasesReport",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DengueCasesReport"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"dengue-cases-report-resource"
  				],
  				"operationId": "updateDengueCasesReport",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/DengueCasesReport"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DengueCasesReport"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"dengue-cases-report-resource"
  				],
  				"operationId": "deleteDengueCasesReport",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"dengue-cases-report-resource"
  				],
  				"operationId": "partialUpdateDengueCasesReport",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/DengueCasesReport"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/DengueCasesReport"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DengueCasesReport"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/demographic-data/{id}": {
  			"get": {
  				"tags": [
  					"demographic-data-resource"
  				],
  				"operationId": "getDemographicData",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DemographicData"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"demographic-data-resource"
  				],
  				"operationId": "updateDemographicData",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/DemographicData"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DemographicData"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"demographic-data-resource"
  				],
  				"operationId": "deleteDemographicData",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"demographic-data-resource"
  				],
  				"operationId": "partialUpdateDemographicData",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/DemographicData"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/DemographicData"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DemographicData"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/demographic-data-sources/{id}": {
  			"get": {
  				"tags": [
  					"demographic-data-source-resource"
  				],
  				"operationId": "getDemographicDataSource",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DemographicDataSource"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"demographic-data-source-resource"
  				],
  				"operationId": "updateDemographicDataSource",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/DemographicDataSource"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DemographicDataSource"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"demographic-data-source-resource"
  				],
  				"operationId": "deleteDemographicDataSource",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"demographic-data-source-resource"
  				],
  				"operationId": "partialUpdateDemographicDataSource",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/DemographicDataSource"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/DemographicDataSource"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DemographicDataSource"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/data-sets/{id}": {
  			"get": {
  				"tags": [
  					"data-set-resource"
  				],
  				"operationId": "getDataSet",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DataSet"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"data-set-resource"
  				],
  				"operationId": "updateDataSet",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/DataSet"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DataSet"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"data-set-resource"
  				],
  				"operationId": "deleteDataSet",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"data-set-resource"
  				],
  				"operationId": "partialUpdateDataSet",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/DataSet"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/DataSet"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DataSet"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/data-input-periods/{id}": {
  			"get": {
  				"tags": [
  					"data-input-period-resource"
  				],
  				"operationId": "getDataInputPeriod",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DataInputPeriod"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"data-input-period-resource"
  				],
  				"operationId": "updateDataInputPeriod",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/DataInputPeriod"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DataInputPeriod"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"data-input-period-resource"
  				],
  				"operationId": "deleteDataInputPeriod",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"data-input-period-resource"
  				],
  				"operationId": "partialUpdateDataInputPeriod",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/DataInputPeriod"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/DataInputPeriod"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DataInputPeriod"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/chvs/{id}": {
  			"get": {
  				"tags": [
  					"chv-resource"
  				],
  				"operationId": "getChv",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/Chv"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"chv-resource"
  				],
  				"operationId": "updateChv",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/Chv"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/Chv"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"chv-resource"
  				],
  				"operationId": "deleteChv",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"chv-resource"
  				],
  				"operationId": "partialUpdateChv",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/Chv"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/Chv"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/Chv"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/chv-teams/{id}": {
  			"get": {
  				"tags": [
  					"chv-team-resource"
  				],
  				"operationId": "getChvTeam",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvTeam"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"chv-team-resource"
  				],
  				"operationId": "updateChvTeam",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvTeam"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvTeam"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"chv-team-resource"
  				],
  				"operationId": "deleteChvTeam",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"chv-team-resource"
  				],
  				"operationId": "partialUpdateChvTeam",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvTeam"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvTeam"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvTeam"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/chv-stock-types/{id}": {
  			"get": {
  				"tags": [
  					"chv-stock-type-resource"
  				],
  				"operationId": "getChvStockType",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvStockType"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"chv-stock-type-resource"
  				],
  				"operationId": "updateChvStockType",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvStockType"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvStockType"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"chv-stock-type-resource"
  				],
  				"operationId": "deleteChvStockType",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"chv-stock-type-resource"
  				],
  				"operationId": "partialUpdateChvStockType",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvStockType"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvStockType"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvStockType"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/chv-stock-movements/{id}": {
  			"get": {
  				"tags": [
  					"chv-stock-movement-resource"
  				],
  				"operationId": "getChvStockMovement",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvStockMovement"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"chv-stock-movement-resource"
  				],
  				"operationId": "updateChvStockMovement",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvStockMovement"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvStockMovement"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"chv-stock-movement-resource"
  				],
  				"operationId": "deleteChvStockMovement",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"chv-stock-movement-resource"
  				],
  				"operationId": "partialUpdateChvStockMovement",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvStockMovement"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvStockMovement"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvStockMovement"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/chv-monthly-malaria-reports/{id}": {
  			"get": {
  				"tags": [
  					"chv-monthly-malaria-report-resource"
  				],
  				"operationId": "getChvMonthlyMalariaReport",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvMonthlyMalariaReport"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"chv-monthly-malaria-report-resource"
  				],
  				"operationId": "updateChvMonthlyMalariaReport",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvMonthlyMalariaReport"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvMonthlyMalariaReport"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"chv-monthly-malaria-report-resource"
  				],
  				"operationId": "deleteChvMonthlyMalariaReport",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"chv-monthly-malaria-report-resource"
  				],
  				"operationId": "partialUpdateChvMonthlyMalariaReport",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvMonthlyMalariaReport"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvMonthlyMalariaReport"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvMonthlyMalariaReport"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/chv-malaria-case-reports/{id}": {
  			"get": {
  				"tags": [
  					"chv-malaria-case-report-resource"
  				],
  				"operationId": "getChvMalariaCaseReport",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvMalariaCaseReport"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"chv-malaria-case-report-resource"
  				],
  				"operationId": "updateChvMalariaCaseReport",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvMalariaCaseReport"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvMalariaCaseReport"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"chv-malaria-case-report-resource"
  				],
  				"operationId": "deleteChvMalariaCaseReport",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"chv-malaria-case-report-resource"
  				],
  				"operationId": "partialUpdateChvMalariaCaseReport",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvMalariaCaseReport"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvMalariaCaseReport"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvMalariaCaseReport"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/chv-ed-sessions/{id}": {
  			"get": {
  				"tags": [
  					"chv-ed-session-resource"
  				],
  				"operationId": "getChvEdSession",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvEdSession"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"chv-ed-session-resource"
  				],
  				"operationId": "updateChvEdSession",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvEdSession"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvEdSession"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"chv-ed-session-resource"
  				],
  				"operationId": "deleteChvEdSession",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"chv-ed-session-resource"
  				],
  				"operationId": "partialUpdateChvEdSession",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvEdSession"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvEdSession"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvEdSession"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/chv-ed-session-types/{id}": {
  			"get": {
  				"tags": [
  					"chv-ed-session-type-resource"
  				],
  				"operationId": "getChvEdSessionType",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvEdSessionType"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"chv-ed-session-type-resource"
  				],
  				"operationId": "updateChvEdSessionType",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvEdSessionType"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvEdSessionType"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"chv-ed-session-type-resource"
  				],
  				"operationId": "deleteChvEdSessionType",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"chv-ed-session-type-resource"
  				],
  				"operationId": "partialUpdateChvEdSessionType",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvEdSessionType"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvEdSessionType"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvEdSessionType"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/cases-report-classes/{id}": {
  			"get": {
  				"tags": [
  					"cases-report-class-resource"
  				],
  				"operationId": "getCasesReportClass",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/CasesReportClass"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"cases-report-class-resource"
  				],
  				"operationId": "updateCasesReportClass",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/CasesReportClass"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/CasesReportClass"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"cases-report-class-resource"
  				],
  				"operationId": "deleteCasesReportClass",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"cases-report-class-resource"
  				],
  				"operationId": "partialUpdateCasesReportClass",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/CasesReportClass"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/CasesReportClass"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/CasesReportClass"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/age-groups/{id}": {
  			"get": {
  				"tags": [
  					"age-group-resource"
  				],
  				"operationId": "getAgeGroup",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/AgeGroup"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"age-group-resource"
  				],
  				"operationId": "updateAgeGroup",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/AgeGroup"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/AgeGroup"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"age-group-resource"
  				],
  				"operationId": "deleteAgeGroup",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"age-group-resource"
  				],
  				"operationId": "partialUpdateAgeGroup",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/AgeGroup"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/AgeGroup"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/AgeGroup"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/age-categories/{id}": {
  			"get": {
  				"tags": [
  					"age-category-resource"
  				],
  				"operationId": "getAgeCategory",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/AgeCategory"
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"age-category-resource"
  				],
  				"operationId": "updateAgeCategory",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/AgeCategory"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/AgeCategory"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"age-category-resource"
  				],
  				"operationId": "deleteAgeCategory",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			},
  			"patch": {
  				"tags": [
  					"age-category-resource"
  				],
  				"operationId": "partialUpdateAgeCategory",
  				"parameters": [
  					{
  						"name": "id",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "integer",
  							"format": "int64"
  						}
  					}
  				],
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/AgeCategory"
  							}
  						},
  						"application/merge-patch+json": {
  							"schema": {
  								"$ref": "#/components/schemas/AgeCategory"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/AgeCategory"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/admin/users": {
  			"get": {
  				"tags": [
  					"user-resource"
  				],
  				"operationId": "getAllUsers",
  				"parameters": [
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/AdminUserDTO"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"put": {
  				"tags": [
  					"user-resource"
  				],
  				"operationId": "updateUser",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/AdminUserDTO"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/AdminUserDTO"
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"user-resource"
  				],
  				"operationId": "createUser",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/AdminUserDTO"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/User"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/relative-periods": {
  			"get": {
  				"tags": [
  					"relative-periods-resource"
  				],
  				"operationId": "getAllRelativePeriods",
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/RelativePeriods"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"relative-periods-resource"
  				],
  				"operationId": "createRelativePeriods",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/RelativePeriods"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/RelativePeriods"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/register": {
  			"post": {
  				"tags": [
  					"account-resource"
  				],
  				"operationId": "registerAccount",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ManagedUserVM"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"201": {
  						"description": "Created"
  					}
  				}
  			}
  		},
  		"/api/periods": {
  			"get": {
  				"tags": [
  					"period-resource"
  				],
  				"operationId": "getAllPeriods",
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/Period"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"period-resource"
  				],
  				"operationId": "createPeriod",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/Period"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/Period"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/period-types": {
  			"get": {
  				"tags": [
  					"period-type-resource"
  				],
  				"operationId": "getAllPeriodTypes",
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/PeriodType"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"period-type-resource"
  				],
  				"operationId": "createPeriodType",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/PeriodType"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/PeriodType"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/people": {
  			"get": {
  				"tags": [
  					"person-resource"
  				],
  				"operationId": "getAllPeople",
  				"parameters": [
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					},
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": true
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/Person"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"person-resource"
  				],
  				"operationId": "createPerson",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/Person"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/Person"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/people-groups": {
  			"get": {
  				"tags": [
  					"people-group-resource"
  				],
  				"operationId": "getAllPeopleGroups",
  				"parameters": [
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					},
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": true
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/PeopleGroup"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"people-group-resource"
  				],
  				"operationId": "createPeopleGroup",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/PeopleGroup"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/PeopleGroup"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/organisation-units": {
  			"get": {
  				"tags": [
  					"organisation-unit-resource"
  				],
  				"operationId": "getAllOrganisationUnits",
  				"parameters": [
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					},
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": true
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/OrganisationUnit"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"organisation-unit-resource"
  				],
  				"operationId": "createOrganisationUnit",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/OrganisationUnit"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/OrganisationUnit"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/organisation-unit-levels": {
  			"get": {
  				"tags": [
  					"organisation-unit-level-resource"
  				],
  				"operationId": "getAllOrganisationUnitLevels",
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/OrganisationUnitLevel"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"organisation-unit-level-resource"
  				],
  				"operationId": "createOrganisationUnitLevel",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/OrganisationUnitLevel"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/OrganisationUnitLevel"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/organisation-unit-groups": {
  			"get": {
  				"tags": [
  					"organisation-unit-group-resource"
  				],
  				"operationId": "getAllOrganisationUnitGroups",
  				"parameters": [
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					},
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": true
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/OrganisationUnitGroup"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"organisation-unit-group-resource"
  				],
  				"operationId": "createOrganisationUnitGroup",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/OrganisationUnitGroup"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/OrganisationUnitGroup"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/organisation-unit-group-sets": {
  			"get": {
  				"tags": [
  					"organisation-unit-group-set-resource"
  				],
  				"operationId": "getAllOrganisationUnitGroupSets",
  				"parameters": [
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					},
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": true
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/OrganisationUnitGroupSet"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"organisation-unit-group-set-resource"
  				],
  				"operationId": "createOrganisationUnitGroupSet",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/OrganisationUnitGroupSet"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/OrganisationUnitGroupSet"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/malaria-units": {
  			"get": {
  				"tags": [
  					"malaria-unit-resource"
  				],
  				"operationId": "getAllMalariaUnits",
  				"parameters": [
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": false
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/MalariaUnit"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"malaria-unit-resource"
  				],
  				"operationId": "createMalariaUnit",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/MalariaUnit"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/MalariaUnit"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/malaria-unit-staff-members": {
  			"get": {
  				"tags": [
  					"malaria-unit-staff-member-resource"
  				],
  				"operationId": "getAllMalariaUnitStaffMembers",
  				"parameters": [
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": false
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/MalariaUnitStaffMember"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"malaria-unit-staff-member-resource"
  				],
  				"operationId": "createMalariaUnitStaffMember",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/MalariaUnitStaffMember"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/MalariaUnitStaffMember"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/malaria-cases-reports": {
  			"get": {
  				"tags": [
  					"malaria-cases-report-resource"
  				],
  				"operationId": "getAllMalariaCasesReports",
  				"parameters": [
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					},
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": true
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/MalariaCasesReport"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"malaria-cases-report-resource"
  				],
  				"operationId": "createMalariaCasesReport",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/MalariaCasesReport"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/MalariaCasesReport"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/gps-locations": {
  			"get": {
  				"tags": [
  					"gps-location-resource"
  				],
  				"operationId": "getAllGpsLocations",
  				"parameters": [
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": false
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/GpsLocation"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"gps-location-resource"
  				],
  				"operationId": "createGpsLocation",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/GpsLocation"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/GpsLocation"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/dengue-cases-reports": {
  			"get": {
  				"tags": [
  					"dengue-cases-report-resource"
  				],
  				"operationId": "getAllDengueCasesReports",
  				"parameters": [
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					},
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": true
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/DengueCasesReport"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"dengue-cases-report-resource"
  				],
  				"operationId": "createDengueCasesReport",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/DengueCasesReport"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DengueCasesReport"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/demographic-data": {
  			"get": {
  				"tags": [
  					"demographic-data-resource"
  				],
  				"operationId": "getAllDemographicData",
  				"parameters": [
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": false
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/DemographicData"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"demographic-data-resource"
  				],
  				"operationId": "createDemographicData",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/DemographicData"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DemographicData"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/demographic-data-sources": {
  			"get": {
  				"tags": [
  					"demographic-data-source-resource"
  				],
  				"operationId": "getAllDemographicDataSources",
  				"parameters": [
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": false
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/DemographicDataSource"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"demographic-data-source-resource"
  				],
  				"operationId": "createDemographicDataSource",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/DemographicDataSource"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DemographicDataSource"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/data-sets": {
  			"get": {
  				"tags": [
  					"data-set-resource"
  				],
  				"operationId": "getAllDataSets",
  				"parameters": [
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": false
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/DataSet"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"data-set-resource"
  				],
  				"operationId": "createDataSet",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/DataSet"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DataSet"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/data-input-periods": {
  			"get": {
  				"tags": [
  					"data-input-period-resource"
  				],
  				"operationId": "getAllDataInputPeriods",
  				"parameters": [
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": false
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/DataInputPeriod"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"data-input-period-resource"
  				],
  				"operationId": "createDataInputPeriod",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/DataInputPeriod"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/DataInputPeriod"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/chvs": {
  			"get": {
  				"tags": [
  					"chv-resource"
  				],
  				"operationId": "getAllChvs",
  				"parameters": [
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					},
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": true
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/Chv"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"chv-resource"
  				],
  				"operationId": "createChv",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/Chv"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/Chv"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/chv-teams": {
  			"get": {
  				"tags": [
  					"chv-team-resource"
  				],
  				"operationId": "getAllChvTeams",
  				"parameters": [
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					},
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": true
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/ChvTeam"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"chv-team-resource"
  				],
  				"operationId": "createChvTeam",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvTeam"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvTeam"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/chv-stock-types": {
  			"get": {
  				"tags": [
  					"chv-stock-type-resource"
  				],
  				"operationId": "getAllChvStockTypes",
  				"parameters": [
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": false
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/ChvStockType"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"chv-stock-type-resource"
  				],
  				"operationId": "createChvStockType",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvStockType"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvStockType"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/chv-stock-movements": {
  			"get": {
  				"tags": [
  					"chv-stock-movement-resource"
  				],
  				"operationId": "getAllChvStockMovements",
  				"parameters": [
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": false
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/ChvStockMovement"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"chv-stock-movement-resource"
  				],
  				"operationId": "createChvStockMovement",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvStockMovement"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvStockMovement"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/chv-monthly-malaria-reports": {
  			"get": {
  				"tags": [
  					"chv-monthly-malaria-report-resource"
  				],
  				"operationId": "getAllChvMonthlyMalariaReports",
  				"parameters": [
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					},
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": true
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/ChvMonthlyMalariaReport"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"chv-monthly-malaria-report-resource"
  				],
  				"operationId": "createChvMonthlyMalariaReport",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvMonthlyMalariaReport"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvMonthlyMalariaReport"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/chv-malaria-case-reports": {
  			"get": {
  				"tags": [
  					"chv-malaria-case-report-resource"
  				],
  				"operationId": "getAllChvMalariaCaseReports",
  				"parameters": [
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					},
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": true
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/ChvMalariaCaseReport"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"chv-malaria-case-report-resource"
  				],
  				"operationId": "createChvMalariaCaseReport",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvMalariaCaseReport"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvMalariaCaseReport"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/chv-ed-sessions": {
  			"get": {
  				"tags": [
  					"chv-ed-session-resource"
  				],
  				"operationId": "getAllChvEdSessions",
  				"parameters": [
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": false
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/ChvEdSession"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"chv-ed-session-resource"
  				],
  				"operationId": "createChvEdSession",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvEdSession"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvEdSession"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/chv-ed-session-types": {
  			"get": {
  				"tags": [
  					"chv-ed-session-type-resource"
  				],
  				"operationId": "getAllChvEdSessionTypes",
  				"parameters": [
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": false
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/ChvEdSessionType"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"chv-ed-session-type-resource"
  				],
  				"operationId": "createChvEdSessionType",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/ChvEdSessionType"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/ChvEdSessionType"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/cases-report-classes": {
  			"get": {
  				"tags": [
  					"cases-report-class-resource"
  				],
  				"operationId": "getAllCasesReportClasses",
  				"parameters": [
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": false
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/CasesReportClass"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"cases-report-class-resource"
  				],
  				"operationId": "createCasesReportClass",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/CasesReportClass"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/CasesReportClass"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/authenticate": {
  			"get": {
  				"tags": [
  					"account-resource"
  				],
  				"operationId": "isAuthenticated",
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "string"
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"user-jwt-controller"
  				],
  				"operationId": "authorize",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/LoginVM"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/JWTToken"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/age-groups": {
  			"get": {
  				"tags": [
  					"age-group-resource"
  				],
  				"operationId": "getAllAgeGroups",
  				"parameters": [
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": false
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/AgeGroup"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"age-group-resource"
  				],
  				"operationId": "createAgeGroup",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/AgeGroup"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/AgeGroup"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/age-categories": {
  			"get": {
  				"tags": [
  					"age-category-resource"
  				],
  				"operationId": "getAllAgeCategories",
  				"parameters": [
  					{
  						"name": "eagerload",
  						"in": "query",
  						"required": false,
  						"schema": {
  							"type": "boolean",
  							"default": false
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/AgeCategory"
  									}
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"age-category-resource"
  				],
  				"operationId": "createAgeCategory",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/AgeCategory"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/AgeCategory"
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/account": {
  			"get": {
  				"tags": [
  					"account-resource"
  				],
  				"operationId": "getAccount",
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/AdminUserDTO"
  								}
  							}
  						}
  					}
  				}
  			},
  			"post": {
  				"tags": [
  					"account-resource"
  				],
  				"operationId": "saveAccount",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/AdminUserDTO"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			}
  		},
  		"/api/account/reset-password/init": {
  			"post": {
  				"tags": [
  					"account-resource"
  				],
  				"operationId": "requestPasswordReset",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"type": "string"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			}
  		},
  		"/api/account/reset-password/finish": {
  			"post": {
  				"tags": [
  					"account-resource"
  				],
  				"operationId": "finishPasswordReset",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/KeyAndPasswordVM"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			}
  		},
  		"/api/account/change-password": {
  			"post": {
  				"tags": [
  					"account-resource"
  				],
  				"operationId": "changePassword",
  				"requestBody": {
  					"content": {
  						"application/json": {
  							"schema": {
  								"$ref": "#/components/schemas/PasswordChangeDTO"
  							}
  						}
  					},
  					"required": true
  				},
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			}
  		},
  		"/api/users": {
  			"get": {
  				"tags": [
  					"public-user-resource"
  				],
  				"operationId": "getAllPublicUsers",
  				"parameters": [
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/UserDTO"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/authorities": {
  			"get": {
  				"tags": [
  					"public-user-resource"
  				],
  				"operationId": "getAuthorities",
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"type": "string"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/admin/users/{login}": {
  			"get": {
  				"tags": [
  					"user-resource"
  				],
  				"operationId": "getUser",
  				"parameters": [
  					{
  						"name": "login",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"pattern": "^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
  							"type": "string"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"$ref": "#/components/schemas/AdminUserDTO"
  								}
  							}
  						}
  					}
  				}
  			},
  			"delete": {
  				"tags": [
  					"user-resource"
  				],
  				"operationId": "deleteUser",
  				"parameters": [
  					{
  						"name": "login",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"pattern": "^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
  							"type": "string"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			}
  		},
  		"/api/activate": {
  			"get": {
  				"tags": [
  					"account-resource"
  				],
  				"operationId": "activateAccount",
  				"parameters": [
  					{
  						"name": "key",
  						"in": "query",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK"
  					}
  				}
  			}
  		},
  		"/api/_search/users/{query}": {
  			"get": {
  				"tags": [
  					"public-user-resource"
  				],
  				"operationId": "search",
  				"parameters": [
  					{
  						"name": "query",
  						"in": "path",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/UserDTO"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/_search/people": {
  			"get": {
  				"tags": [
  					"person-resource"
  				],
  				"operationId": "searchPeople",
  				"parameters": [
  					{
  						"name": "query",
  						"in": "query",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					},
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/Person"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/_search/people-groups": {
  			"get": {
  				"tags": [
  					"people-group-resource"
  				],
  				"operationId": "searchPeopleGroups",
  				"parameters": [
  					{
  						"name": "query",
  						"in": "query",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					},
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/PeopleGroup"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/_search/organisation-units": {
  			"get": {
  				"tags": [
  					"organisation-unit-resource"
  				],
  				"operationId": "searchOrganisationUnits",
  				"parameters": [
  					{
  						"name": "query",
  						"in": "query",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					},
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/OrganisationUnit"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/_search/organisation-unit-levels": {
  			"get": {
  				"tags": [
  					"organisation-unit-level-resource"
  				],
  				"operationId": "searchOrganisationUnitLevels",
  				"parameters": [
  					{
  						"name": "query",
  						"in": "query",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/OrganisationUnitLevel"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/_search/organisation-unit-groups": {
  			"get": {
  				"tags": [
  					"organisation-unit-group-resource"
  				],
  				"operationId": "searchOrganisationUnitGroups",
  				"parameters": [
  					{
  						"name": "query",
  						"in": "query",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					},
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/OrganisationUnitGroup"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/_search/organisation-unit-group-sets": {
  			"get": {
  				"tags": [
  					"organisation-unit-group-set-resource"
  				],
  				"operationId": "searchOrganisationUnitGroupSets",
  				"parameters": [
  					{
  						"name": "query",
  						"in": "query",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					},
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/OrganisationUnitGroupSet"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/_search/malaria-units": {
  			"get": {
  				"tags": [
  					"malaria-unit-resource"
  				],
  				"operationId": "searchMalariaUnits",
  				"parameters": [
  					{
  						"name": "query",
  						"in": "query",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/MalariaUnit"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/_search/malaria-unit-staff-members": {
  			"get": {
  				"tags": [
  					"malaria-unit-staff-member-resource"
  				],
  				"operationId": "searchMalariaUnitStaffMembers",
  				"parameters": [
  					{
  						"name": "query",
  						"in": "query",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/MalariaUnitStaffMember"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/_search/demographic-data": {
  			"get": {
  				"tags": [
  					"demographic-data-resource"
  				],
  				"operationId": "searchDemographicData",
  				"parameters": [
  					{
  						"name": "query",
  						"in": "query",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/DemographicData"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/_search/demographic-data-sources": {
  			"get": {
  				"tags": [
  					"demographic-data-source-resource"
  				],
  				"operationId": "searchDemographicDataSources",
  				"parameters": [
  					{
  						"name": "query",
  						"in": "query",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/DemographicDataSource"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/_search/chvs": {
  			"get": {
  				"tags": [
  					"chv-resource"
  				],
  				"operationId": "searchChvs",
  				"parameters": [
  					{
  						"name": "query",
  						"in": "query",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					},
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/Chv"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/_search/chv-teams": {
  			"get": {
  				"tags": [
  					"chv-team-resource"
  				],
  				"operationId": "searchChvTeams",
  				"parameters": [
  					{
  						"name": "query",
  						"in": "query",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					},
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/ChvTeam"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/_search/chv-stock-types": {
  			"get": {
  				"tags": [
  					"chv-stock-type-resource"
  				],
  				"operationId": "searchChvStockTypes",
  				"parameters": [
  					{
  						"name": "query",
  						"in": "query",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/ChvStockType"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/_search/chv-malaria-case-reports": {
  			"get": {
  				"tags": [
  					"chv-malaria-case-report-resource"
  				],
  				"operationId": "searchChvMalariaCaseReports",
  				"parameters": [
  					{
  						"name": "query",
  						"in": "query",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					},
  					{
  						"name": "page",
  						"in": "query",
  						"description": "Zero-based page index (0..N)",
  						"required": false,
  						"schema": {
  							"minimum": 0,
  							"type": "integer",
  							"default": 0
  						}
  					},
  					{
  						"name": "size",
  						"in": "query",
  						"description": "The size of the page to be returned",
  						"required": false,
  						"schema": {
  							"minimum": 1,
  							"type": "integer",
  							"default": 20
  						}
  					},
  					{
  						"name": "sort",
  						"in": "query",
  						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
  						"required": false,
  						"schema": {
  							"type": "array",
  							"items": {
  								"type": "string"
  							}
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/ChvMalariaCaseReport"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		},
  		"/api/_search/chv-ed-session-types": {
  			"get": {
  				"tags": [
  					"chv-ed-session-type-resource"
  				],
  				"operationId": "searchChvEdSessionTypes",
  				"parameters": [
  					{
  						"name": "query",
  						"in": "query",
  						"required": true,
  						"schema": {
  							"type": "string"
  						}
  					}
  				],
  				"responses": {
  					"200": {
  						"description": "OK",
  						"content": {
  							"*/*": {
  								"schema": {
  									"type": "array",
  									"items": {
  										"$ref": "#/components/schemas/ChvEdSessionType"
  									}
  								}
  							}
  						}
  					}
  				}
  			}
  		}
  	},
  	"components": {
  		"schemas": {
  			"RelativePeriods": {
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"thisDay": {
  						"type": "boolean"
  					},
  					"yesterday": {
  						"type": "boolean"
  					},
  					"last3Days": {
  						"type": "boolean"
  					},
  					"last7Days": {
  						"type": "boolean"
  					},
  					"last14Days": {
  						"type": "boolean"
  					},
  					"thisMonth": {
  						"type": "boolean"
  					},
  					"lastMonth": {
  						"type": "boolean"
  					},
  					"thisBimonth": {
  						"type": "boolean"
  					},
  					"lastBimonth": {
  						"type": "boolean"
  					},
  					"thisQuarter": {
  						"type": "boolean"
  					},
  					"lastQuarter": {
  						"type": "boolean"
  					},
  					"thisSixMonth": {
  						"type": "boolean"
  					},
  					"lastSixMonth": {
  						"type": "boolean"
  					},
  					"weeksThisYear": {
  						"type": "boolean"
  					},
  					"monthsThisYear": {
  						"type": "boolean"
  					},
  					"biMonthsThisYear": {
  						"type": "boolean"
  					},
  					"quartersThisYear": {
  						"type": "boolean"
  					},
  					"thisYear": {
  						"type": "boolean"
  					},
  					"monthsLastYear": {
  						"type": "boolean"
  					},
  					"quartersLastYear": {
  						"type": "boolean"
  					},
  					"lastYear": {
  						"type": "boolean"
  					},
  					"last5Years": {
  						"type": "boolean"
  					},
  					"last12Months": {
  						"type": "boolean"
  					},
  					"last6Months": {
  						"type": "boolean"
  					},
  					"last3Months": {
  						"type": "boolean"
  					},
  					"last6BiMonths": {
  						"type": "boolean"
  					},
  					"last4Quarters": {
  						"type": "boolean"
  					},
  					"last2SixMonths": {
  						"type": "boolean"
  					},
  					"thisFinancialYear": {
  						"type": "boolean"
  					},
  					"lastFinancialYear": {
  						"type": "boolean"
  					},
  					"last5FinancialYears": {
  						"type": "boolean"
  					},
  					"thisWeek": {
  						"type": "boolean"
  					},
  					"lastWeek": {
  						"type": "boolean"
  					},
  					"thisBiWeek": {
  						"type": "boolean"
  					},
  					"lastBiWeek": {
  						"type": "boolean"
  					},
  					"last4Weeks": {
  						"type": "boolean"
  					},
  					"last4BiWeeks": {
  						"type": "boolean"
  					},
  					"last12Weeks": {
  						"type": "boolean"
  					},
  					"last52Weeks": {
  						"type": "boolean"
  					}
  				}
  			},
  			"Period": {
  				"required": [
  					"endDate",
  					"periodType",
  					"startDate"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"name": {
  						"type": "string"
  					},
  					"startDate": {
  						"type": "string",
  						"format": "date"
  					},
  					"endDate": {
  						"type": "string",
  						"format": "date"
  					},
  					"periodType": {
  						"$ref": "#/components/schemas/PeriodType"
  					}
  				}
  			},
  			"PeriodType": {
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"name": {
  						"type": "string"
  					}
  				}
  			},
  			"CasesReportClass": {
  				"required": [
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"name": {
  						"type": "string"
  					},
  					"shortName": {
  						"maxLength": 50,
  						"minLength": 0,
  						"type": "string"
  					},
  					"description": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					}
  				}
  			},
  			"Chv": {
  				"required": [
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"withdrawn": {
  						"type": "boolean"
  					},
  					"dateJoined": {
  						"type": "string",
  						"format": "date"
  					},
  					"dateWithdrawn": {
  						"type": "string",
  						"format": "date"
  					},
  					"description": {
  						"type": "string"
  					}
  				}
  			},
  			"DataInputPeriod": {
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"openingDate": {
  						"type": "string",
  						"format": "date"
  					},
  					"closingDate": {
  						"type": "string",
  						"format": "date"
  					},
  					"period": {
  						"$ref": "#/components/schemas/Period"
  					},
  					"dataSet": {
  						"$ref": "#/components/schemas/DataSet"
  					}
  				}
  			},
  			"DataSet": {
  				"required": [
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"name": {
  						"type": "string"
  					},
  					"shortName": {
  						"maxLength": 50,
  						"minLength": 0,
  						"type": "string"
  					},
  					"description": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"expiryDays": {
  						"type": "integer",
  						"format": "int32"
  					},
  					"timelyDays": {
  						"type": "integer",
  						"format": "int32"
  					},
  					"dataInputPeriods": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/DataInputPeriod"
  						}
  					},
  					"malariaCasesReports": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/MalariaCasesReport"
  						}
  					},
  					"dengueCasesReports": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/DengueCasesReport"
  						}
  					},
  					"periodType": {
  						"$ref": "#/components/schemas/PeriodType"
  					},
  					"notificationRecipients": {
  						"$ref": "#/components/schemas/PeopleGroup"
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"sources": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/OrganisationUnit"
  						}
  					}
  				}
  			},
  			"DemographicData": {
  				"required": [
  					"date",
  					"source",
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"date": {
  						"type": "string",
  						"format": "date"
  					},
  					"level": {
  						"type": "string",
  						"enum": [
  							"SUBVILLAGE_LEVEL",
  							"DISTRICT_LEVEL"
  						]
  					},
  					"totalPopulation": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"malePopulation": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"femalePopulation": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"lessThan5Population": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"greaterThan5Population": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"bw5And15Population": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"greaterThan15Population": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"households": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"houses": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"healthFacilities": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"avgNoOfRooms": {
  						"minimum": 0.0,
  						"exclusiveMinimum": false,
  						"type": "number"
  					},
  					"avgRoomArea": {
  						"minimum": 0.0,
  						"exclusiveMinimum": false,
  						"type": "number"
  					},
  					"avgHouseArea": {
  						"minimum": 0.0,
  						"exclusiveMinimum": false,
  						"type": "number"
  					},
  					"individualsPerHousehold": {
  						"minimum": 0.0,
  						"exclusiveMinimum": false,
  						"type": "number"
  					},
  					"populationGrowthRate": {
  						"minimum": 0.0,
  						"exclusiveMinimum": false,
  						"type": "number"
  					},
  					"comment": {
  						"type": "string"
  					},
  					"organisationUnit": {
  						"$ref": "#/components/schemas/OrganisationUnit"
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"source": {
  						"$ref": "#/components/schemas/DemographicDataSource"
  					}
  				}
  			},
  			"DemographicDataSource": {
  				"required": [
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"name": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					}
  				}
  			},
  			"DengueCasesReport": {
  				"required": [
  					"organisationUnit",
  					"period",
  					"reportClass",
  					"status",
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"rdtTested": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"rdtPositive": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"probableCases": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"inpatientCases": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"deathCases": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"treated": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"suspectedCases": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"status": {
  						"type": "string",
  						"enum": [
  							"COMPLETE",
  							"INCOMPLETE"
  						]
  					},
  					"comment": {
  						"type": "string"
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"reportClass": {
  						"$ref": "#/components/schemas/CasesReportClass"
  					},
  					"period": {
  						"$ref": "#/components/schemas/Period"
  					},
  					"dataSet": {
  						"$ref": "#/components/schemas/DataSet"
  					},
  					"organisationUnit": {
  						"$ref": "#/components/schemas/OrganisationUnit"
  					}
  				}
  			},
  			"GpsLocation": {
  				"required": [
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"latitude": {
  						"type": "number",
  						"description": "The latitude of this position in degrees normalized to the interval -90.0\nto +90.0 (both inclusive).",
  						"format": "double"
  					},
  					"longitude": {
  						"type": "number",
  						"description": "The longitude of the position in degrees normalized to the interval -180\n(exclusive) to +180 (inclusive).",
  						"format": "double"
  					},
  					"timestamp": {
  						"type": "string",
  						"description": "The time at which this position was determined.",
  						"format": "date-time"
  					},
  					"altitude": {
  						"type": "number",
  						"description": "The altitude of the device in meters.\nThe altitude is not available on all devices. In these cases the returned\nvalue is 0.0.",
  						"format": "double"
  					},
  					"accuracy": {
  						"type": "number",
  						"description": "The estimated horizontal accuracy of the position in meters.\nThe accuracy is not available on all devices. In these cases the value is\n0.0.",
  						"format": "double"
  					}
  				}
  			},
  			"MalariaCasesReport": {
  				"required": [
  					"organisationUnit",
  					"period",
  					"reportClass",
  					"status",
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"rdtTested": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"rdtPositive": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"rdtPf": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"rdtPv": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"rdtPother": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"microTested": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"microPositive": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"microPf": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"microPv": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"microMix": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"microPother": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"testedTotal": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"positiveTotal": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"pfTotal": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"pvTotal": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"mixTotal": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"probableCases": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"inpatientCases": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"deathCases": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"treated": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"suspectedCases": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"totalFrequents": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"status": {
  						"type": "string",
  						"enum": [
  							"COMPLETE",
  							"INCOMPLETE"
  						]
  					},
  					"comment": {
  						"type": "string"
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"reportClass": {
  						"$ref": "#/components/schemas/CasesReportClass"
  					},
  					"period": {
  						"$ref": "#/components/schemas/Period"
  					},
  					"dataSet": {
  						"$ref": "#/components/schemas/DataSet"
  					},
  					"organisationUnit": {
  						"$ref": "#/components/schemas/OrganisationUnit"
  					}
  				}
  			},
  			"MalariaUnit": {
  				"required": [
  					"name",
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"name": {
  						"type": "string"
  					},
  					"shortName": {
  						"maxLength": 50,
  						"minLength": 0,
  						"type": "string"
  					},
  					"description": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"order": {
  						"type": "integer",
  						"format": "int32"
  					}
  				}
  			},
  			"OrganisationUnit": {
  				"required": [
  					"organisationUnitType",
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"name": {
  						"type": "string"
  					},
  					"shortName": {
  						"maxLength": 50,
  						"minLength": 0,
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"path": {
  						"type": "string"
  					},
  					"hierarchyLevel": {
  						"type": "integer",
  						"format": "int32"
  					},
  					"openingDate": {
  						"type": "string",
  						"format": "date"
  					},
  					"comment": {
  						"type": "string"
  					},
  					"closedDate": {
  						"type": "string",
  						"format": "date"
  					},
  					"url": {
  						"type": "string"
  					},
  					"contactPerson": {
  						"type": "string"
  					},
  					"address": {
  						"type": "string"
  					},
  					"email": {
  						"type": "string"
  					},
  					"phoneNumber": {
  						"type": "string"
  					},
  					"organisationUnitType": {
  						"type": "string",
  						"enum": [
  							"COUNTRY",
  							"GOV",
  							"DISTRICT",
  							"VILLAGE",
  							"SUBVILLAGE",
  							"HEALTH_FACILITY"
  						]
  					},
  					"malariaReports": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/MalariaCasesReport"
  						}
  					},
  					"dengueReports": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/DengueCasesReport"
  						}
  					},
  					"parent": {
  						"$ref": "#/components/schemas/OrganisationUnit"
  					},
  					"hfHomeSubVillage": {
  						"$ref": "#/components/schemas/OrganisationUnit"
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"servicingHf": {
  						"$ref": "#/components/schemas/OrganisationUnit"
  					},
  					"gpsLocation": {
  						"$ref": "#/components/schemas/GpsLocation"
  					},
  					"malariaUnit": {
  						"$ref": "#/components/schemas/MalariaUnit"
  					},
  					"assignedChv": {
  						"$ref": "#/components/schemas/Chv"
  					},
  					"children": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/OrganisationUnit"
  						}
  					},
  					"demographicData": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/DemographicData"
  						}
  					},
  					"groups": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/OrganisationUnitGroup"
  						}
  					},
  					"people": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/Person"
  						}
  					},
  					"dataViewPeople": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/Person"
  						}
  					},
  					"dataSets": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/DataSet"
  						}
  					}
  				}
  			},
  			"OrganisationUnitGroup": {
  				"required": [
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"name": {
  						"type": "string"
  					},
  					"shortName": {
  						"maxLength": 50,
  						"minLength": 0,
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"symbol": {
  						"type": "string"
  					},
  					"color": {
  						"type": "string"
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"members": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/OrganisationUnit"
  						}
  					},
  					"groupSets": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/OrganisationUnitGroupSet"
  						}
  					}
  				}
  			},
  			"OrganisationUnitGroupSet": {
  				"required": [
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"name": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"compulsory": {
  						"type": "boolean"
  					},
  					"includeSubhierarchyInAnalytics": {
  						"type": "boolean"
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"organisationUnitGroups": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/OrganisationUnitGroup"
  						}
  					}
  				}
  			},
  			"PeopleGroup": {
  				"required": [
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"name": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"uuid": {
  						"type": "string",
  						"format": "uuid"
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"members": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/Person"
  						}
  					},
  					"managedGroups": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/PeopleGroup"
  						}
  					},
  					"managedByGroups": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/PeopleGroup"
  						}
  					}
  				}
  			},
  			"Person": {
  				"required": [
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"name": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"uuid": {
  						"type": "string",
  						"format": "uuid"
  					},
  					"mobile": {
  						"type": "string"
  					},
  					"dateOfBirth": {
  						"type": "string",
  						"format": "date"
  					},
  					"disabled": {
  						"type": "boolean"
  					},
  					"userInfo": {
  						"$ref": "#/components/schemas/User"
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"organisationUnits": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/OrganisationUnit"
  						}
  					},
  					"dataViewOrganisationUnits": {
  						"uniqueItems": true,
  						"type": "array",
  						"description": "TODO Later Delete the relation from orgUnit side",
  						"items": {
  							"$ref": "#/components/schemas/OrganisationUnit"
  						}
  					},
  					"groups": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/PeopleGroup"
  						}
  					}
  				}
  			},
  			"User": {
  				"required": [
  					"activated",
  					"login"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"login": {
  						"maxLength": 50,
  						"minLength": 1,
  						"pattern": "^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
  						"type": "string"
  					},
  					"firstName": {
  						"maxLength": 50,
  						"minLength": 0,
  						"type": "string"
  					},
  					"lastName": {
  						"maxLength": 50,
  						"minLength": 0,
  						"type": "string"
  					},
  					"email": {
  						"maxLength": 254,
  						"minLength": 5,
  						"type": "string"
  					},
  					"activated": {
  						"type": "boolean"
  					},
  					"langKey": {
  						"maxLength": 10,
  						"minLength": 2,
  						"type": "string"
  					},
  					"imageUrl": {
  						"maxLength": 256,
  						"minLength": 0,
  						"type": "string"
  					},
  					"resetDate": {
  						"type": "string",
  						"format": "date-time"
  					}
  				}
  			},
  			"OrganisationUnitLevel": {
  				"required": [
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"name": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"level": {
  						"type": "integer",
  						"format": "int32"
  					},
  					"offlineLevels": {
  						"type": "integer",
  						"format": "int32"
  					}
  				}
  			},
  			"MalariaUnitStaffMember": {
  				"required": [
  					"malariaUnit",
  					"memberNo",
  					"memberType",
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"description": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"memberNo": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"memberType": {
  						"type": "string",
  						"enum": [
  							"ADMIN",
  							"LAP",
  							"DOCTOR",
  							"ENTOMOLOGIST",
  							"MEMBER",
  							"OTHER"
  						]
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"person": {
  						"$ref": "#/components/schemas/Person"
  					},
  					"malariaUnit": {
  						"$ref": "#/components/schemas/MalariaUnit"
  					}
  				}
  			},
  			"ChvTeam": {
  				"required": [
  					"teamNo",
  					"teamType",
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"name": {
  						"type": "string"
  					},
  					"description": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"teamNo": {
  						"pattern": "^[0-9]{1,12}",
  						"type": "string"
  					},
  					"teamType": {
  						"type": "string",
  						"enum": [
  							"SUPERVISOR",
  							"EVALUATION",
  							"HEAD_OF_ACTIVITY",
  							"FINANCE",
  							"PARTNER",
  							"MOH"
  						]
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"person": {
  						"$ref": "#/components/schemas/Person"
  					},
  					"supervisedChvs": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"$ref": "#/components/schemas/Chv"
  						}
  					}
  				}
  			},
  			"ChvStockType": {
  				"required": [
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"name": {
  						"type": "string"
  					},
  					"shortName": {
  						"maxLength": 50,
  						"minLength": 0,
  						"type": "string"
  					},
  					"description": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					}
  				}
  			},
  			"ChvStockMovement": {
  				"required": [
  					"chv",
  					"status",
  					"stockType",
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"date": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"remainingPreviousMonth": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"received": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"consumed": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"lostCorr": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"remainingThisMonth": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"status": {
  						"type": "string",
  						"enum": [
  							"COMPLETE",
  							"INCOMPLETE"
  						]
  					},
  					"stockType": {
  						"$ref": "#/components/schemas/ChvStockType"
  					},
  					"chv": {
  						"$ref": "#/components/schemas/Chv"
  					},
  					"period": {
  						"$ref": "#/components/schemas/Period"
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					}
  				}
  			},
  			"ChvMonthlyMalariaReport": {
  				"required": [
  					"chv",
  					"period",
  					"status",
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"tested": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"positive": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"pv": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"pf": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"mix": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"unApproved": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"simpleMalaria": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"severeMalaria": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"drugs": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"supps": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"referrals": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"status": {
  						"type": "string",
  						"enum": [
  							"COMPLETE",
  							"INCOMPLETE"
  						]
  					},
  					"comment": {
  						"type": "string"
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"chv": {
  						"$ref": "#/components/schemas/Chv"
  					},
  					"period": {
  						"$ref": "#/components/schemas/Period"
  					}
  				}
  			},
  			"AgeGroup": {
  				"required": [
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"name": {
  						"type": "string"
  					},
  					"shortName": {
  						"maxLength": 50,
  						"minLength": 0,
  						"type": "string"
  					},
  					"description": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					}
  				}
  			},
  			"ChvMalariaCaseReport": {
  				"required": [
  					"ageGroup",
  					"chv",
  					"status",
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"name": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"date": {
  						"type": "string",
  						"format": "date"
  					},
  					"mobile": {
  						"type": "string"
  					},
  					"gender": {
  						"type": "string",
  						"enum": [
  							"MALE",
  							"FEMALE"
  						]
  					},
  					"isPregnant": {
  						"type": "boolean"
  					},
  					"malariaTestResult": {
  						"type": "string",
  						"enum": [
  							"POSITIVE",
  							"NEGATIVE"
  						]
  					},
  					"isPv": {
  						"type": "boolean"
  					},
  					"isPf": {
  						"type": "boolean"
  					},
  					"isMix": {
  						"type": "boolean"
  					},
  					"isUnapproved": {
  						"type": "boolean"
  					},
  					"isSimpleMalaria": {
  						"type": "boolean"
  					},
  					"isSevereMalaria": {
  						"type": "boolean"
  					},
  					"drugsGiven": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"suppsGiven": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"referral": {
  						"type": "boolean"
  					},
  					"barImageUrl": {
  						"type": "string"
  					},
  					"comment": {
  						"type": "string"
  					},
  					"status": {
  						"type": "string",
  						"enum": [
  							"COMPLETE",
  							"INCOMPLETE"
  						]
  					},
  					"subVillage": {
  						"$ref": "#/components/schemas/OrganisationUnit"
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"chv": {
  						"$ref": "#/components/schemas/Chv"
  					},
  					"gpsLocation": {
  						"$ref": "#/components/schemas/GpsLocation"
  					},
  					"ageGroup": {
  						"$ref": "#/components/schemas/AgeGroup"
  					}
  				}
  			},
  			"ChvEdSession": {
  				"required": [
  					"chv",
  					"sessionType",
  					"status",
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"noOfSessions": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"noOfBeneficiaries": {
  						"minimum": 0,
  						"type": "integer",
  						"format": "int32"
  					},
  					"status": {
  						"type": "string",
  						"enum": [
  							"COMPLETE",
  							"INCOMPLETE"
  						]
  					},
  					"sessionType": {
  						"$ref": "#/components/schemas/ChvEdSessionType"
  					},
  					"chv": {
  						"$ref": "#/components/schemas/Chv"
  					},
  					"period": {
  						"$ref": "#/components/schemas/Period"
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					}
  				}
  			},
  			"ChvEdSessionType": {
  				"required": [
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"name": {
  						"type": "string"
  					},
  					"shortName": {
  						"maxLength": 50,
  						"minLength": 0,
  						"type": "string"
  					},
  					"description": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					}
  				}
  			},
  			"AgeCategory": {
  				"required": [
  					"uid"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"uid": {
  						"maxLength": 11,
  						"minLength": 0,
  						"type": "string"
  					},
  					"code": {
  						"type": "string"
  					},
  					"name": {
  						"type": "string"
  					},
  					"shortName": {
  						"maxLength": 50,
  						"minLength": 0,
  						"type": "string"
  					},
  					"description": {
  						"type": "string"
  					},
  					"created": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"updated": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"createdBy": {
  						"$ref": "#/components/schemas/User"
  					},
  					"updatedBy": {
  						"$ref": "#/components/schemas/User"
  					}
  				}
  			},
  			"AdminUserDTO": {
  				"required": [
  					"login"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"login": {
  						"maxLength": 50,
  						"minLength": 1,
  						"pattern": "^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
  						"type": "string"
  					},
  					"firstName": {
  						"maxLength": 50,
  						"minLength": 0,
  						"type": "string"
  					},
  					"lastName": {
  						"maxLength": 50,
  						"minLength": 0,
  						"type": "string"
  					},
  					"email": {
  						"maxLength": 254,
  						"minLength": 5,
  						"type": "string"
  					},
  					"imageUrl": {
  						"maxLength": 256,
  						"minLength": 0,
  						"type": "string"
  					},
  					"activated": {
  						"type": "boolean"
  					},
  					"langKey": {
  						"maxLength": 10,
  						"minLength": 2,
  						"type": "string"
  					},
  					"createdBy": {
  						"type": "string"
  					},
  					"createdDate": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"lastModifiedBy": {
  						"type": "string"
  					},
  					"lastModifiedDate": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"authorities": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"type": "string"
  						}
  					}
  				}
  			},
  			"ManagedUserVM": {
  				"required": [
  					"login"
  				],
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"login": {
  						"maxLength": 50,
  						"minLength": 1,
  						"pattern": "^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
  						"type": "string"
  					},
  					"firstName": {
  						"maxLength": 50,
  						"minLength": 0,
  						"type": "string"
  					},
  					"lastName": {
  						"maxLength": 50,
  						"minLength": 0,
  						"type": "string"
  					},
  					"email": {
  						"maxLength": 254,
  						"minLength": 5,
  						"type": "string"
  					},
  					"imageUrl": {
  						"maxLength": 256,
  						"minLength": 0,
  						"type": "string"
  					},
  					"activated": {
  						"type": "boolean"
  					},
  					"langKey": {
  						"maxLength": 10,
  						"minLength": 2,
  						"type": "string"
  					},
  					"createdBy": {
  						"type": "string"
  					},
  					"createdDate": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"lastModifiedBy": {
  						"type": "string"
  					},
  					"lastModifiedDate": {
  						"type": "string",
  						"format": "date-time"
  					},
  					"authorities": {
  						"uniqueItems": true,
  						"type": "array",
  						"items": {
  							"type": "string"
  						}
  					},
  					"password": {
  						"maxLength": 100,
  						"minLength": 4,
  						"type": "string"
  					}
  				}
  			},
  			"LoginVM": {
  				"required": [
  					"password",
  					"username"
  				],
  				"type": "object",
  				"properties": {
  					"username": {
  						"maxLength": 50,
  						"minLength": 1,
  						"type": "string"
  					},
  					"password": {
  						"maxLength": 100,
  						"minLength": 4,
  						"type": "string"
  					},
  					"rememberMe": {
  						"type": "boolean"
  					}
  				}
  			},
  			"JWTToken": {
  				"type": "object",
  				"properties": {
  					"id_token": {
  						"type": "string"
  					}
  				}
  			},
  			"KeyAndPasswordVM": {
  				"type": "object",
  				"properties": {
  					"key": {
  						"type": "string"
  					},
  					"newPassword": {
  						"type": "string"
  					}
  				}
  			},
  			"PasswordChangeDTO": {
  				"type": "object",
  				"properties": {
  					"currentPassword": {
  						"type": "string"
  					},
  					"newPassword": {
  						"type": "string"
  					}
  				}
  			},
  			"UserDTO": {
  				"type": "object",
  				"properties": {
  					"id": {
  						"type": "integer",
  						"format": "int64"
  					},
  					"login": {
  						"type": "string"
  					}
  				}
  			}
  		}
  	}
  }
contentType: yaml
